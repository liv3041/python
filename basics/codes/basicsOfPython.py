
""""
 Boolean Operations- and, or, not

 These are the Boolean operations, ordered by ascending priority:
  1. x or y := 
     if x is true, then x, else y. 
     This  is a short circuit operator, so it only evaluates the second argument if the first one is false.
  2. x and y := 
     if x is false, then x, else y.
     This is a shor circuit operator, so it only evaluates if the first argument is true.
  
  3. not x := if x is false, then True, else False. not has a lower priority than non-Boolean operators, so not a == b is 
     interpreted as not(a == b), and  a == not b is a syntax error.
    

"""

x = True
y = False
print(x or y)

x = 4
y = 20
# checks if x is true. If yes will return true.
print(x == 4 or y == 20)
# checks if x is true. If not then will check for y. If is true then will return true.
print(x == 30 or y == 20)

print(x == 30 or y == 30) #false

print("*******************************")
print(x == 4 and y == 20) #true
print(x == 4 and y == 30) #false

"""
Reading and Writing Files:

open() method returns a file object. This file object acts as an interface through which you can interact with the file on the disk.
Using this object, you can perform operations such as reading, writing, or appending content depending on the mode specified when opening the file.

open() method has three main argument filename, file mode, encoding of the file.

File mode tells us, how the file is going to used:
'r': only read
'w': only writing
'a': appending data at the end of the file.
'r+': both reading and writing

The files generated by the file object is open in textmode.
Note: If the encoding is not specified then it is platform dependent. The exact defalult is determined by the locale settings of your operating system.

"""

# The file named 'workfile' will write 'The Workfile is created!' in encoding utf-32-le
# f = open('workfile','w', encoding="utf-32-le")
# f.write("The Workfile is created!")
# f.close()

# # This will throw an value error as the read() is being called after close()
# f.read()

f = open('workfile','w', encoding="utf-8")
f.write("The Workfile is created!")
f.close()

with open('workfile','r', encoding="utf-8") as f:
    read_data = f.read()
   
print(read_data)
# To check if the file has been closed automatically.
print(f.closed)
    

